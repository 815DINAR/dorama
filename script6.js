// script.js v1.0 (Debug Fixed) - –°—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å —Ä–∞–±–æ—á–µ–π –∫–Ω–æ–ø–∫–æ–π –æ–ø–∏—Å–∞–Ω–∏—è
document.addEventListener('DOMContentLoaded', async () => {
  const videoPlayer = document.getElementById('currentVideo');
  const videoTitle = document.getElementById('videoTitle');
  const videoSeries = document.getElementById('videoSeries');
  const videoSeasons = document.getElementById('videoSeasons');
  const videoStatus = document.getElementById('videoStatus');
  const videoCountry = document.getElementById('videoCountry');
  const videoGenre = document.getElementById('videoGenre');
  const watchLink = document.getElementById('watchLink');
  const descriptionButton = document.getElementById('descriptionButton');
  const descriptionModal = document.getElementById('descriptionModal');
  const modalClose = document.getElementById('modalClose');
  const modalTitle = document.getElementById('modalTitle');
  const modalDescription = document.getElementById('modalDescription');

  let videos = [];
  let videoOrder = []; // –º–∞—Å—Å–∏–≤ –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
  let currentOrderIndex = 0; // —Ç–µ–∫—É—â–∏–π —É–∫–∞–∑–∞—Ç–µ–ª—å –≤ –º–∞—Å—Å–∏–≤–µ videoOrder

  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  const isTelegram = window.Telegram && window.Telegram.WebApp;
  const userAgent = navigator.userAgent || '';
  const isMobile = /Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);
  
  console.log('üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–µ:');
  console.log('- Telegram WebApp:', !!isTelegram);
  console.log('- –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:', isMobile);
  console.log('- User Agent:', userAgent);
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Telegram WebApp
  if (isTelegram) {
    console.log('üì± –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–ª—è Telegram WebApp');
    window.Telegram.WebApp.ready();
    window.Telegram.WebApp.expand();
    console.log('‚úÖ Telegram WebApp –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM:');
  console.log('videoPlayer:', !!videoPlayer);
  console.log('descriptionButton:', !!descriptionButton, descriptionButton?.id);
  console.log('descriptionModal:', !!descriptionModal, descriptionModal?.id);
  console.log('modalClose:', !!modalClose, modalClose?.id);
  console.log('modalTitle:', !!modalTitle, modalTitle?.id);
  console.log('modalDescription:', !!modalDescription, modalDescription?.id);

  // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –∏–Ω–¥–µ–∫—Å–æ–≤
  function shuffleVideos() {
    videoOrder = videos.map((_, index) => index);
    for (let i = videoOrder.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [videoOrder[i], videoOrder[j]] = [videoOrder[j], videoOrder[i]];
    }
    currentOrderIndex = 0;
    console.log('üîÄ –í–∏–¥–µ–æ –ø–µ—Ä–µ–º–µ—à–∞–Ω—ã, –ø–æ—Ä—è–¥–æ–∫:', videoOrder);
  }

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –≤–∏–¥–µ–æ —Å —Å–µ—Ä–≤–µ—Ä–∞
  async function fetchVideos() {
    console.log('üì• –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤–∏–¥–µ–æ...');
    try {
      const response = await fetch('get_videos.php');
      console.log('üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response);
      console.log('‚úÖ Response.ok:', response.ok);
      console.log('üìä Response.status:', response.status);
      
      if (!response.ok) {
        throw new Error(`HTTP error: ${response.status}`);
      }
      
      const rawText = await response.text();
      console.log('üìÑ –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):', rawText.substring(0, 500));
      
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–∞—Ä—Å–∏—Ç—å JSON
      try {
        videos = JSON.parse(rawText);
        console.log('‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω');
        console.log('üì∫ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', videos.length);
        console.log('üé¨ –°–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ:', videos);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –≤–∏–¥–µ–æ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        videos.forEach((video, index) => {
          console.log(`üé• –í–∏–¥–µ–æ ${index + 1}:`, {
            filename: video.filename,
            title: video.title,
            description: video.description,
            hasDescription: !!video.description
          });
        });
        
        if (videos.length > 0) {
          shuffleVideos();
          loadVideo();
        } else {
          console.warn('‚ö†Ô∏è –ú–∞—Å—Å–∏–≤ –≤–∏–¥–µ–æ –ø—É—Å—Ç–æ–π');
        }
      } catch (parseError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:', parseError);
        console.log('üìÑ –ü—Ä–æ–±–ª–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç:', rawText);
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ:', error);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–µ–æ
  function loadVideo() {
    if (videos.length === 0) {
      console.warn('‚ö†Ô∏è –ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
      return;
    }
    
    const idx = videoOrder[currentOrderIndex];
    const videoData = videos[idx];
    console.log(`üé¨ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∏–¥–µ–æ ${currentOrderIndex + 1}/${videoOrder.length}, –∏–Ω–¥–µ–∫—Å: ${idx}`);
    console.log('üé• –î–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ:', videoData);
    
    if (videoData) {
      const newSrc = `uploads/${encodeURIComponent(videoData.filename)}`;
      console.log('üìÅ –ü—É—Ç—å –∫ –≤–∏–¥–µ–æ:', newSrc);

      // –ü–ª–∞–≤–Ω–æ–µ –∑–∞—Ç–µ–º–Ω–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∏–¥–µ–æ
      videoPlayer.style.opacity = 0;
      setTimeout(() => {
        videoPlayer.src = newSrc;
        console.log('‚ñ∂Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º src –≤–∏–¥–µ–æ:', newSrc);
        videoPlayer.load();
        videoPlayer.play().then(() => {
          console.log('‚úÖ –í–∏–¥–µ–æ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
        }).catch(error => {
          console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ:', error);
        });
        videoPlayer.style.opacity = 1;
      }, 100);

      // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–≤–µ—Ä–ª–µ–µ–≤ - —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ (–Ω–∞ –º–µ—Å—Ç–µ —Å—Ç—Ä–∞–Ω—ã) –∏ –∂–∞–Ω—Ä
      videoTitle.textContent = videoData.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'; // –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞ –º–µ—Å—Ç–µ —Å—Ç—Ä–∞–Ω—ã
      videoSeries.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–µ—Ä–∏–∏
      videoSeasons.textContent = ''; // –û—á–∏—â–∞–µ–º —Å–µ–∑–æ–Ω—ã  
      videoStatus.textContent = ''; // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç—É—Å
      videoCountry.textContent = ''; // –û—á–∏—â–∞–µ–º —Å—Ç—Ä–∞–Ω—É
      videoGenre.textContent = `${videoData.genre || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`; // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∂–∞–Ω—Ä
      
      console.log('üìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', {
        title: videoData.title,
        genre: videoData.genre,
        description: videoData.description
      });

      if (watchLink) {
        watchLink.href = videoData.link || '#';
      }
    }
  }

  // –§—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–µ–æ –ø–æ —Å–ª—É—á–∞–π–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
  function nextVideo() {
    console.log('‚è≠Ô∏è –°–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ');
    currentOrderIndex++;
    if (currentOrderIndex >= videoOrder.length) {
      console.log('üîÑ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∑–∞–Ω–æ–≤–æ');
      shuffleVideos();
    }
    loadVideo();
  }

  function previousVideo() {
    console.log('‚èÆÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ');
    currentOrderIndex--;
    if (currentOrderIndex < 0) {
      currentOrderIndex = videoOrder.length - 1;
    }
    loadVideo();
  }

  // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º
  function showDescription() {
    console.log('üìñ –§—É–Ω–∫—Ü–∏—è showDescription –≤—ã–∑–≤–∞–Ω–∞');
    console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ:', videos.length);
    console.log('üìç –¢–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å:', currentOrderIndex);
    
    if (videos.length === 0) {
      console.warn('‚ö†Ô∏è –ù–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ–ø–∏—Å–∞–Ω–∏—è');
      return;
    }
    
    const idx = videoOrder[currentOrderIndex];
    const videoData = videos[idx];
    
    console.log('üé¨ –î–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–∏–¥–µ–æ:', videoData);
    
    if (videoData) {
      const title = videoData.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è';
      const description = videoData.description || '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç';
      const series = videoData.series || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const seasons = videoData.seasons || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const status = videoData.status || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const country = videoData.country || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const genre = videoData.genre || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      const link = videoData.link || '#';
      
      // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
      const fullDescription = `${description}

üìä –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:
‚Ä¢ –°–µ—Ä–∏–∏: ${series}
‚Ä¢ –°–µ–∑–æ–Ω—ã: ${seasons}  
‚Ä¢ –°—Ç–∞—Ç—É—Å: ${status}
‚Ä¢ –°—Ç—Ä–∞–Ω–∞: ${country}
‚Ä¢ –ñ–∞–Ω—Ä: ${genre}
‚Ä¢ –°—Å—ã–ª–∫–∞: ${link}`;
      
      console.log('üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title);
      console.log('üìÑ –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:', fullDescription);
      
      if (modalTitle) {
        modalTitle.textContent = title;
        console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
      } else {
        console.error('‚ùå modalTitle —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      if (modalDescription) {
        modalDescription.textContent = fullDescription;
        console.log('‚úÖ –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      } else {
        console.error('‚ùå modalDescription —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      if (descriptionModal) {
        descriptionModal.classList.add('show');
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫–∞–∑–∞–Ω–æ');
        console.log('üé™ –ö–ª–∞—Å—Å—ã –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:', descriptionModal.className);
      } else {
        console.error('‚ùå descriptionModal —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    } else {
      console.error('‚ùå –î–∞–Ω–Ω—ã–µ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞:', idx);
    }
  }

  // –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  function hideDescription() {
    console.log('‚ùå –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–∏—Å–∞–Ω–∏—è');
    if (descriptionModal) {
      descriptionModal.classList.remove('show');
      console.log('‚úÖ –ö–ª–∞—Å—Å "show" —É–¥–∞–ª–µ–Ω –∏–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    } else {
      console.error('‚ùå descriptionModal —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏');
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è (—Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π Telegram)
  if (descriptionButton) {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    descriptionButton.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('üìñ –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è (click)');
      showDescription();
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è touch —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (–≤–∞–∂–Ω–æ –¥–ª—è Telegram)
    descriptionButton.addEventListener('touchstart', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('üìñ Touch start –Ω–∞ –∫–Ω–æ–ø–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è');
    });
    
    descriptionButton.addEventListener('touchend', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('üìñ Touch end –Ω–∞ –∫–Ω–æ–ø–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è');
      showDescription();
    });
    
    // –î–ª—è Telegram WebApp
    descriptionButton.addEventListener('pointerdown', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('üìñ Pointer down –Ω–∞ –∫–Ω–æ–ø–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è');
    });
    
    descriptionButton.addEventListener('pointerup', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('üìñ Pointer up –Ω–∞ –∫–Ω–æ–ø–∫–µ –æ–ø–∏—Å–∞–Ω–∏—è');
      showDescription();
    });
    
    console.log('‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏ –æ–ø–∏—Å–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–≤–∫–ª—é—á–∞—è Telegram)');
  } else {
    console.error('‚ùå –ö–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  }

  if (modalClose) {
    modalClose.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('‚ùå –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (click)');
      hideDescription();
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è Telegram
    modalClose.addEventListener('touchend', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('‚ùå Touch end –Ω–∞ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è');
      hideDescription();
    });
    
    modalClose.addEventListener('pointerup', (e) => {
      e.preventDefault();
      e.stopPropagation();
      console.log('‚ùå Pointer up –Ω–∞ –∫–Ω–æ–ø–∫–µ –∑–∞–∫—Ä—ã—Ç–∏—è');
      hideDescription();
    });
    
    console.log('‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } else {
    console.error('‚ùå –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!');
  }

  if (descriptionModal) {
    descriptionModal.addEventListener('click', (e) => {
      if (e.target === descriptionModal) {
        console.log('‚ùå –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
        hideDescription();
      }
    });
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  } else {
    console.error('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –≤–∏–¥–µ–æ –¥–ª—è –ø–∞—É–∑—ã/–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
  const videoContainer = document.querySelector('.video-container');
  if (videoContainer) {
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞/—Ç–∞–ø–∞
    const handleVideoInteraction = (e, eventType) => {
      console.log(`üé¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–∏–¥–µ–æ (${eventType})`);
      console.log('üéØ –≠–ª–µ–º–µ–Ω—Ç –∫–ª–∏–∫–∞:', e.target.tagName, e.target.className);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –ø–æ –∫–Ω–æ–ø–∫–∞–º –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–º—É –æ–∫–Ω—É
      if (e.target.tagName.toLowerCase() === 'a' || 
          e.target.tagName.toLowerCase() === 'button' ||
          e.target.closest('button') || 
          e.target.closest('.action-buttons') ||
          e.target.closest('.description-modal') ||
          e.target.classList.contains('action-button') ||
          e.target.classList.contains('watch-link')) {
        console.log('üö´ –ö–ª–∏–∫ –ø–æ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º');
        return;
      }
      
      if (videoPlayer) {
        if (videoPlayer.paused) {
          console.log('‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –≤–∏–¥–µ–æ');
          videoPlayer.play().catch(err => {
            console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:', err);
          });
        } else {
          console.log('‚è∏Ô∏è –°—Ç–∞–≤–∏–º –≤–∏–¥–µ–æ –Ω–∞ –ø–∞—É–∑—É');
          videoPlayer.pause();
        }
      } else {
        console.warn('‚ö†Ô∏è –í–∏–¥–µ–æ –ø–ª–µ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
    };
    
    // –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞
    videoContainer.addEventListener('click', (e) => {
      e.stopPropagation();
      handleVideoInteraction(e, 'click');
    });
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –∏ Telegram
    if (isMobile || isTelegram) {
      let touchStartTime = 0;
      let touchStartTarget = null;
      
      videoContainer.addEventListener('touchstart', (e) => {
        touchStartTime = Date.now();
        touchStartTarget = e.target;
        console.log('üëÜ Touch start –Ω–∞ –≤–∏–¥–µ–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ');
      });
      
      videoContainer.addEventListener('touchend', (e) => {
        const touchDuration = Date.now() - touchStartTime;
        const touchEndTarget = e.target;
        
        console.log(`üëÜ Touch end: ${touchDuration}ms, same target: ${touchStartTarget === touchEndTarget}`);
        
        // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –∫–æ—Ä–æ—Ç–∫–æ–µ –∫–∞—Å–∞–Ω–∏–µ –ø–æ —Ç–æ–º—É –∂–µ —ç–ª–µ–º–µ–Ω—Ç—É (—Ç–∞–ø)
        if (touchDuration < 500 && touchStartTarget === touchEndTarget) {
          e.preventDefault();
          e.stopPropagation();
          handleVideoInteraction(e, 'touchend');
        }
      });
    }
    
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≤–∏–¥–µ–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } else {
    console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–≤–∞–π–ø–æ–≤ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–µ–æ
  let touchStartY = 0;
  let touchEndY = 0;
  
  if (videoPlayer) {
    videoPlayer.addEventListener('touchstart', (e) => {
      touchStartY = e.changedTouches[0].screenY;
    });
    
    videoPlayer.addEventListener('touchend', (e) => {
      touchEndY = e.changedTouches[0].screenY;
      if (touchEndY < touchStartY) {
        console.log('‚¨ÜÔ∏è –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö - —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ');
        nextVideo(); // –í–≤–µ—Ä—Ö ‚Äî —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ
      }
      if (touchEndY > touchStartY) {
        console.log('‚¨áÔ∏è –°–≤–∞–π–ø –≤–Ω–∏–∑ - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ');
        previousVideo(); // –í–Ω–∏–∑ ‚Äî –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ
      }
    });
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–≤–∞–π–ø–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
  } else {
    console.error('‚ùå –í–∏–¥–µ–æ –ø–ª–µ–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–≤–∞–π–ø–æ–≤!');
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è wheel –¥–ª—è –ø—Ä–æ–ª–∏—Å—Ç—ã–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –Ω–∞ —Ç–∞—á–ø–∞–¥–µ –Ω–æ—É—Ç–±—É–∫–∞ —Å throttle
  let wheelTimeout = null;
  if (videoContainer) {
    videoContainer.addEventListener('wheel', (e) => {
      e.preventDefault();
      if (wheelTimeout) return;
      if (e.deltaY > 0) {
        console.log('üñ±Ô∏è –ö–æ–ª–µ—Å–æ –≤–Ω–∏–∑ - —Å–ª–µ–¥—É—é—â–µ–µ –≤–∏–¥–µ–æ');
        nextVideo();
      } else if (e.deltaY < 0) {
        console.log('üñ±Ô∏è –ö–æ–ª–µ—Å–æ –≤–≤–µ—Ä—Ö - –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ');
        previousVideo();
      }
      wheelTimeout = setTimeout(() => {
        wheelTimeout = null;
      }, 1000); // –∑–∞–¥–µ—Ä–∂–∫–∞ 1000 –º—Å
    });
    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–ª–µ—Å–∞ –º—ã—à–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  }

  // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π video —ç–ª–µ–º–µ–Ω—Ç
  if (videoPlayer) {
    videoPlayer.muted = false;
    console.log('üîä –ó–≤—É–∫ –≤–∫–ª—é—á–µ–Ω');
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  await fetchVideos();

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –≤–∏–¥–µ–æ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  if (videoPlayer) {
    videoPlayer.play().catch(error => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –≤–∏–¥–µ–æ:', error);
    });
  }

  console.log('üéâ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ!');
  console.log('üìä –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞:');
  console.log('- –í–∏–¥–µ–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:', videos.length > 0);
  console.log('- –ö–Ω–æ–ø–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç:', !!descriptionButton);
  console.log('- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≥–æ—Ç–æ–≤–æ:', !!descriptionModal);
});